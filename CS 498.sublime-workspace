{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"tok",
				"tokStr"
			],
			[
				"to",
				"tokStr"
			],
			[
				"st",
				"stringData"
			],
			[
				"ste",
				"statements"
			],
			[
				"sta",
				"statements"
			],
			[
				"ins",
				"instruction_type"
			],
			[
				"expression",
				"expression_type"
			],
			[
				"tmp",
				"tmpHack"
			],
			[
				"Lang",
				"LangParse"
			],
			[
				"out",
				"output_iterator"
			],
			[
				"outpu",
				"output_file"
			],
			[
				"int",
				"intData"
			],
			[
				"asse",
				"assembleStatement"
			],
			[
				"str",
				"stream"
			],
			[
				"Byte",
				"Bytestream"
			],
			[
				"By",
				"Bytestream"
			],
			[
				"a",
				"appendBytestream"
			],
			[
				"B",
				"Bytestream"
			],
			[
				"Lemon",
				"LemonMove"
			],
			[
				"SubS",
				"SubScons"
			],
			[
				"copy",
				"copy2"
			],
			[
				"cop",
				"copy1"
			],
			[
				"L",
				"Lexer_Parser"
			],
			[
				"Com",
				"CompilerLib"
			],
			[
				"p",
				"parserTest"
			],
			[
				"Lan",
				"LangParse"
			],
			[
				"Fle",
				"FlexBuilder"
			],
			[
				"In",
				"InstructionLib"
			],
			[
				"Inter",
				"InterpreterLib"
			],
			[
				"IFSTTE",
				"IFSTATEMENT"
			],
			[
				"Fil",
				"fillInSymbolReferences"
			],
			[
				"l",
				"lSym"
			],
			[
				"size",
				"sizeof"
			],
			[
				"as",
				"astack"
			],
			[
				"List",
				"List_Ref_Value"
			],
			[
				"variab",
				"variables"
			],
			[
				"var",
				"varIndex"
			],
			[
				"f",
				"fexpression"
			],
			[
				"get",
				"getName"
			],
			[
				"in",
				"instruction_type"
			],
			[
				"Co",
				"computationalStackItem"
			],
			[
				"comp",
				"computationalStackItem"
			],
			[
				"variable",
				"variableIndex"
			],
			[
				"com",
				"computationalStackItem"
			],
			[
				"Get",
				"GetTypeAndAdvance"
			],
			[
				"assem",
				"assembleExpression"
			],
			[
				"G",
				"iGT"
			],
			[
				"As",
				"AssignVariableIndices(struct Context *ctx , int startIndex )	void"
			],
			[
				"sym",
				"symToken"
			],
			[
				"new_",
				"new_symbol"
			],
			[
				"data",
				"dataSource"
			],
			[
				"va",
				"variableOffset"
			],
			[
				"IFSTAT",
				"IFSTATEMENT"
			],
			[
				"wrtie",
				"writeTypeToByteStream"
			],
			[
				"wr",
				"writeInstructionToStream"
			],
			[
				"Lis",
				"ListSize"
			],
			[
				"GetT",
				"GetTypeAndAdvance"
			],
			[
				"co",
				"computationalStackItem"
			],
			[
				"AS",
				"AStack_Push"
			],
			[
				"write",
				"writeInstructionToStream"
			],
			[
				"op",
				"opType"
			],
			[
				"resu",
				"resultItem"
			],
			[
				"print",
				"printResultItem"
			],
			[
				"I",
				"INTEGER"
			],
			[
				"re",
				"resultItem"
			],
			[
				"CHEC",
				"CHECK_GREATER_THAN_EQUAL"
			],
			[
				"CH",
				"CHECK_LESS_THAN"
			],
			[
				"pr",
				"progBuf"
			],
			[
				"buf",
				"bufsize"
			],
			[
				"writ",
				"writeTypeToByteStream"
			],
			[
				"assemble",
				"assembleContext"
			],
			[
				"new",
				"new_context"
			],
			[
				"statem",
				"statementgroup"
			],
			[
				"MU",
				"MULTIPLY"
			],
			[
				"left",
				"leftExp"
			],
			[
				"right",
				"rightExp"
			],
			[
				"LOGICAL_",
				"LOGICAL_EQ"
			],
			[
				"tes",
				"testString"
			],
			[
				"compi",
				"compilationProcess"
			],
			[
				"build",
				"buildPath"
			],
			[
				"fact",
				"factor"
			],
			[
				"de",
				"definition"
			],
			[
				"no",
				"noCode"
			],
			[
				"yes",
				"yesCode"
			],
			[
				"ifs",
				"ifstmt"
			],
			[
				"Li",
				"List_Add_Value"
			],
			[
				"stmnt",
				"stmntgrp"
			],
			[
				"stateme",
				"statement"
			],
			[
				"statement",
				"statementgroup"
			],
			[
				"A",
				"AStack_Empty"
			],
			[
				"ASta",
				"AStack_Empty"
			],
			[
				"def",
				"define"
			],
			[
				"param",
				"paramCount"
			],
			[
				"GetParam",
				"getParamData"
			],
			[
				"_",
				"_variables"
			],
			[
				"if",
				"ifStmt"
			],
			[
				"C",
				"Code_Template"
			],
			[
				"Con",
				"Construct"
			],
			[
				"Lon",
				"LongestPalindrome"
			],
			[
				"u",
				"tmpUBound"
			],
			[
				"alp",
				"alphabet"
			],
			[
				"stat",
				"statesvisited"
			],
			[
				"ep",
				"epsilonClosures"
			],
			[
				"state",
				"stateCount"
			],
			[
				"epsion",
				"epsilonIndex"
			],
			[
				"cu",
				"currentSet"
			],
			[
				"alph",
				"alphabetLength"
			],
			[
				"return",
				"returnFromHere"
			],
			[
				"SFAF",
				"SFAF_TRANSITIONS"
			],
			[
				"S",
				"SFAF_TRANSITIONS"
			],
			[
				"read",
				"readTransitions"
			],
			[
				"TMO",
				"tmpTransition"
			],
			[
				"E",
				"ExtractIntFromToken"
			],
			[
				"src",
				"srcState"
			],
			[
				"TOKEN",
				"TOKENTYPE_IDENTIFIER"
			],
			[
				"TOK",
				"TOKENTYPE_OPEN_BRACE"
			],
			[
				"file",
				"fileContents"
			],
			[
				"ret",
				"_ret"
			],
			[
				"SFAF_s",
				"SFAF_SETTING_COUNT"
			],
			[
				"se",
				"settingsMap"
			],
			[
				"TO",
				"TOKENTYPE_OPEN_BRACE"
			],
			[
				"strn",
				"strncpy"
			],
			[
				"token",
				"tokens"
			],
			[
				"SFAF_",
				"SFAF_ALPHABET"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/Interpreter/SConscript",
			"settings":
			{
				"buffer_size": 385,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Interpreter/common.h",
			"settings":
			{
				"buffer_size": 153,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Interpreter/interpreter.h",
			"settings":
			{
				"buffer_size": 278,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Interpreter/interpreter.c",
			"settings":
			{
				"buffer_size": 10322,
				"line_ending": "Unix"
			}
		},
		{
			"file": "runTest.sh",
			"settings":
			{
				"buffer_size": 71,
				"line_ending": "Unix"
			}
		},
		{
			"file": "SConstruct",
			"settings":
			{
				"buffer_size": 887,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 101 files for \"strlen\" (regex, case sensitive)\n\n/Users/Joey/Desktop/Capstone/src/Compiler/Lexer_Parser/token.cpp:\n   16  			break;\n   17  		case STRING:\n   18: 			stringLength = strlen(tokStr);\n   19  			this->stringData = (char *) malloc(stringLength - 1);\n   20  			memcpy(this->stringData, tokStr + 1, stringLength - 2);\n   ..\n   22  			break;\n   23  		case SYMBOL:\n   24: 			stringLength = strlen(tokStr);\n   25  			this->literal = (char *) malloc(stringLength);\n   26  			memcpy(this->literal, tokStr, stringLength);\n\n/Users/Joey/Desktop/Capstone/src/Compiler/Tools/lemon.c:\n   47  ** Compilers are getting increasingly pedantic about type conversions\n   48  ** as C evolves ever closer to Ada....  To work around the latest problems\n   49: ** we have to define the following variant of strlen().\n   50  */\n   51: #define lemonStrlen(X)   ((int)strlen(X))\n   52  \n   53  /*\n   ..\n   72    int *pnUsed,          /* Slots of the buffer used so far */\n   73    const char *zIn,      /* Text to add */\n   74:   int nIn,              /* Bytes of text to add.  -1 to use strlen() */\n   75    int iWidth            /* Field width.  Negative to left justify */\n   76  ){\n\n5 matches across 2 files\n",
			"settings":
			{
				"buffer_size": 1204,
				"line_ending": "Unix",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "src/Compiler/Lexer_Parser/token.cpp",
			"settings":
			{
				"buffer_size": 579,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Compiler/Lexer_Parser/LangLexer.l",
			"settings":
			{
				"buffer_size": 6416,
				"line_ending": "Windows"
			}
		},
		{
			"file": "tests/BasicPrint.lan",
			"settings":
			{
				"buffer_size": 36,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/Compiler/Lexer_Parser/token.hpp",
			"settings":
			{
				"buffer_size": 365,
				"line_ending": "Windows"
			}
		},
		{
			"file": "src/Interpreter/disassembler.c",
			"settings":
			{
				"buffer_size": 2572,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/User/scons.sublime-build",
	"command_palette":
	{
		"height": 81.0,
		"selected_items":
		[
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Remove Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"pac",
				"Package Control: Install Package"
			],
			[
				"package control in",
				"Package Control: Install Package"
			],
			[
				"",
				"Package Control: Install Package"
			]
		],
		"width": 400.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)",
			"import urllib.request,os; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), 'wb').write(urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ','%20')).read())"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/Joey/Desktop/Capstone",
		"/Users/Joey/Desktop/Capstone/src",
		"/Users/Joey/Desktop/Capstone/src/Common",
		"/Users/Joey/Desktop/Capstone/src/Compiler",
		"/Users/Joey/Desktop/Capstone/src/Compiler/Lexer_Parser",
		"/Users/Joey/Desktop/Capstone/src/Interpreter"
	],
	"file_history":
	[
		"/Users/Joey/Desktop/Capstone/src/Common/Instruction.h",
		"/Users/Joey/Desktop/Capstone/src/Compiler/Lexer_Parser/LangParse.y",
		"/Users/Joey/Desktop/Capstone/src/Compiler/Common/program.cpp",
		"/Users/Joey/Desktop/Capstone/SConstruct",
		"/Users/Joey/Desktop/Capstone/src/Interpreter/disassembler.c",
		"/Users/Joey/Desktop/Capstone/src/Common/Instruction.cpp",
		"/Users/Joey/Desktop/Capstone/src/Compiler/Assembler/assembler.hpp",
		"/Users/Joey/Desktop/Capstone/src/Compiler/Assembler/assembler.cpp",
		"/Users/Joey/Desktop/Capstone/src/Compiler/Tools/SConscript",
		"/Users/Joey/Desktop/Capstone/src/Compiler/compiler.hpp",
		"/Users/Joey/Desktop/Capstone/src/Compiler/compiler.cpp",
		"/Users/Joey/Desktop/Capstone/src/Compiler/SConscript",
		"/Users/Joey/Desktop/Capstone/src/Compiler/Lexer_Parser/LangLexer.l",
		"/Users/Joey/Desktop/Capstone/src/Compiler/Lexer_Parser/SConscript",
		"/Users/Joey/Desktop/Capstone/src/Common/Bytestream.cpp",
		"/Users/Joey/Desktop/Capstone/src/Compiler/Common/program.hpp",
		"/Users/Joey/Desktop/Capstone/src/Interpreter/interpreter.c",
		"/Users/Joey/Desktop/Capstone/src/Interpreter/common.h",
		"/Users/Joey/Desktop/Capstone/src/Interpreter/SConscript",
		"/Users/Joey/Desktop/Capstone/src/Interpreter/common.c",
		"/Users/Joey/Desktop/Capstone/src/Common/SConscript",
		"/Users/Joey/Desktop/Capstone/src/Common/Bytestream.hpp",
		"/Users/Joey/Desktop/Capstone/src/Compiler/parseTest.cpp",
		"/Users/Joey/Desktop/Capstone/src/Compiler/Lexer_Parser/token.cpp",
		"/Users/Joey/Desktop/Capstone/src/Compiler/Lexer_Parser/token.hpp",
		"/Users/Joey/Desktop/Capstone/src/Compiler/Lexer_Parser/lexer.hpp",
		"/Users/Joey/Desktop/Capstone/src/Compiler/CompilerMain.cpp",
		"/Users/Joey/Desktop/Capstone/src/Compiler/compilerTest.cpp",
		"/Users/Joey/Desktop/Capstone/src/Compiler/Common/SConscript",
		"/Users/Joey/Library/Application Support/Sublime Text 3/Packages/User/scons.sublime-build",
		"/Users/Joey/Desktop/Capstone/src/Common/CByteStream/ByteStream.c",
		"/Users/Joey/Desktop/Capstone/src/Compiler/Assembler/SConscript",
		"/Users/Joey/Desktop/Capstone/src/Common/CByteStream/ByteStream.h",
		"/Users/Joey/Desktop/Capstone/src/Compiler/Common/Expression.hpp",
		"/Users/Joey/Desktop/Capstone/src/Compiler/Common/Symbol.hpp",
		"/Users/Joey/Desktop/Capstone/src/Compiler/Common/Symbol.cpp",
		"/Users/Joey/Desktop/Capstone/src/Compiler/Common/Expression.cpp",
		"/Users/Joey/Desktop/Capstone/src/Documentation/SConscript",
		"/Users/Joey/Desktop/Capstone/src/SConscript",
		"/Users/Joey/Desktop/Capstone/Common/wscript",
		"/Users/Joey/Desktop/Capstone/src/Compiler/Assembler/wscript",
		"/Users/Joey/Desktop/Capstone/src/Compiler/Assembler/assembler.c",
		"/Users/Joey/Desktop/Capstone/.gitignore",
		"/Users/Joey/Desktop/Capstone/src/Common/CByteStream/SConscript",
		"/Users/Joey/Desktop/Capstone/Interpreter/wscript",
		"/Users/Joey/Desktop/Capstone/y2c.py",
		"/Users/Joey/Desktop/Capstone/src/Compiler/Common/wscript",
		"/Users/Joey/Desktop/Capstone/src/Compiler/wscript",
		"/Users/Joey/Desktop/Capstone/src/Common/List.h",
		"/Users/Joey/Desktop/Capstone/Interpreter/Sconscript",
		"/Users/Joey/Desktop/Capstone/Common/Sconscript",
		"/Users/Joey/Desktop/Capstone/CS 498.sublime-project",
		"/Users/Joey/Desktop/Capstone/Documentation/ByteCodeReference.tex",
		"/Users/Joey/Desktop/Capstone/Documentation/main.tex",
		"/Users/Joey/Desktop/Capstone/Interpreter/interpreter.c",
		"/Users/Joey/Desktop/Capstone/Documentation/wscript",
		"/Users/Joey/Desktop/Capstone/Compiler/Lexer_Parser/LangLexer.l",
		"/C/Users/Joe/Documents/School/CS498/Documentation/LanguageReference.tex",
		"/C/Users/Joe/Documents/School/CS498/Documentation/standalone.tex",
		"/C/Users/Joe/Documents/School/CS498/Documentation/InterpreterReference.tex",
		"/C/Users/Joe/Documents/School/CS498/Documentation/ByteCodeReference.tex",
		"/C/Users/Joe/Documents/School/CS498/wscript",
		"/C/Users/Joe/Documents/School/CS498/Interpreter/interpreter.c",
		"/C/Users/Joe/Documents/School/CS498/Common/Instruction.h",
		"/C/Users/Joe/Documents/School/CS498/tests/SymbolTests.lan",
		"/C/Users/Joe/Documents/School/CS498/Compiler/Assembler/assembler.c",
		"/C/Users/Joe/Documents/School/CS498/Compiler/Common/program.h",
		"/C/Users/Joe/Documents/School/CS498/tests/BasicPrint.lan",
		"/C/Users/Joe/Documents/School/CS498/Documentation/wscript",
		"/C/Users/Joe/Documents/School/CS498/Compiler/Lexer_Parser/LangParse.y",
		"/C/Users/Joe/Documents/School/CS498/Compiler/compiler.c",
		"/C/Users/Joe/Documents/School/CS498/Documentation/main.tex",
		"/C/Users/Joe/Downloads/flex-2.5.35.tar/flex-2.5.35/flex-2.5.35/TODO",
		"/Users/Joey/Desktop/School/CS 498/Common/List.h",
		"/Users/Joey/Desktop/School/CS 498/Interpreter/interpreter.c",
		"/Users/Joey/Desktop/School/CS 498/Common/Instruction.c",
		"/Users/Joey/Desktop/School/CS 498/Common/Instruction.h",
		"/Users/Joey/Desktop/School/CS 498/Common/enumDefs.h",
		"/Users/Joey/Desktop/School/CS 498/Compiler/Assembler/assembler.c",
		"/Users/Joey/Desktop/School/CS 498/Compiler/Common/program.h",
		"/Users/Joey/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/Joey/Desktop/School/CS 498/Common/CByteStream/ByteStream.h",
		"/Users/Joey/Desktop/School/CS 498/Compiler/compiler.c",
		"/Users/Joey/Library/Application Support/Sublime Text 3/Packages/User/Package Control.sublime-settings",
		"/Users/Joey/Library/Application Support/Sublime Text 3/Packages/Package Control/Package Control.sublime-settings",
		"/Users/Joey/Library/Application Support/Sublime Text 3/Packages/User/JSON.sublime-settings",
		"/Users/Joey/Desktop/School/CS 498/tests/If Tests/if test 2.lan",
		"/Users/Joey/Desktop/School/CS 498/Compiler/Lexer_Parser/LangLexer.l",
		"/Users/Joey/Desktop/School/CS 498/Interpreter/interpreter.h",
		"/Users/Joey/Desktop/School/CS 498/Common/CByteStream/ByteStream.c",
		"/Users/Joey/Desktop/School/CS 498/CS 498.sublime-project",
		"/Users/Joey/Desktop/School/COM 308/Short Paper 1/Paper.tex",
		"/Users/Joey/Desktop/milage.txt",
		"/Users/Joey/Desktop/cs-498-capstone/tests/If Tests/if test 4.lan",
		"/Users/Joey/Desktop/cs-498-capstone/tests/If Tests/if test 0.lan",
		"/Users/Joey/Desktop/cs-498-capstone/tests/If Tests/if test 3.lan",
		"/Users/Joey/Desktop/cs-498-capstone/tests/If Tests/if test 2.lan",
		"/Users/Joey/Desktop/cs-498-capstone/tests/If Tests/if test 1.lan",
		"/Users/Joey/Desktop/cs-498-capstone/tests/General.py",
		"/Users/Joey/Desktop/cs-498-capstone/tests/CoreTest.py",
		"/Users/Joey/Desktop/cs-498-capstone/Compiler/parseTest.c",
		"/Users/Joey/Desktop/cs-498-capstone/Common/enumDefs.h",
		"/Users/Joey/Desktop/cs-498-capstone/Compiler/Common/program.c",
		"/Users/Joey/Desktop/cs-498-capstone/tests/SymbolTests_ParserOutput.txt",
		"/Users/Joey/Desktop/cs-498-capstone/Compiler/Assembler/assembler.c",
		"/Users/Joey/Desktop/cs-498-capstone/tests/print addition test.lan",
		"/Users/Joey/Desktop/cs-498-capstone/Compiler/Lexer_Parser/token.h",
		"/Users/Joey/Desktop/cs-498-capstone/Compiler/Lexer_Parser/LangParse.y",
		"/Users/Joey/Desktop/cs-498-capstone/Compiler/Lexer_Parser/LangParse.out",
		"/Users/Joey/Desktop/cs-498-capstone/Compiler/Lexer_Parser/LangParse.h",
		"/Users/Joey/Desktop/cs-498-capstone/Compiler/Lexer_Parser/LangParse.c",
		"/Users/Joey/Desktop/cs-498-capstone/Compiler/Lexer_Parser/LangLexer.l",
		"/Users/Joey/Desktop/cs-498-capstone/build/Compiler/lemon",
		"/Users/Joey/Desktop/cs-498-capstone/Compiler/Lexer_Parser/token.c",
		"/Users/Joey/Desktop/cs-498-capstone/Compiler/Common/program.h",
		"/home/joe/Desktop/School/CS 498/Common/Instruction.c",
		"/home/joe/Desktop/School/CS 498/tests/addition test.lan",
		"/home/joe/Desktop/School/CS 498/Compiler/Lexer_Parser/LangParse.c",
		"/home/joe/Desktop/School/CS 498/CS 498.sublime-project",
		"/home/joe/Desktop/School/CS 498/Common/astackTest.c",
		"/home/joe/Desktop/School/CS 498/Common/astack.h",
		"/home/joe/Desktop/School/CS 498/Compiler/compiler.c",
		"/home/joe/Desktop/School/CS 498/Style.sublime-settings",
		"/home/joe/Desktop/School/CS 498/Compiler/assembler.h",
		"/home/joe/Desktop/School/CS 498/Compiler/assembler.c",
		"/Users/Joey/Desktop/School/CS 498/Compiler/wscript",
		"/Users/Joey/Desktop/School/CS 498/Common/astackTest.c",
		"/Users/Joey/Desktop/School/CS 498/Compiler/compiler.h"
	],
	"find":
	{
		"height": 35.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"strlen",
			"getName",
			"instruct",
			";\n",
			"new_symbol",
			"new_context",
			"gStmnt",
			"malloc\\(sizeof\\(struct GenericStatement",
			"malloc",
			"new_expression",
			"new_inst",
			"new_expression_children",
			"header",
			" Parse",
			"Parse",
			"parse",
			"getToken",
			"INTEGER",
			"symbol",
			"symbolc",
			"___EXPRESSION___",
			"getDataTypeName",
			"getName",
			",",
			"\"",
			"green",
			"\\(",
			"green\\}",
			"\\\\color",
			"Unavailable",
			"Available",
			"\\\\color",
			"\" &",
			"Availa",
			"\\{U",
			"\\{Ava",
			"\\\\color",
			"textcolor",
			"~ ",
			"Bitwise",
			"\\{[^\\}]+\\}",
			"only",
			"                                                                                   ",
			"isGlobal",
			"isGlobal = 2",
			";\n",
			"\\}[ \\n\\t\\r]+\\\\paragraph.+",
			"new_complete_instruction",
			"getParamCountForInstruction",
			"in ",
			"LOGICAL",
			"asdf",
			", ",
			"void ",
			"struct [a-zA-Z]*\\{",
			"shell",
			"With",
			"parse\\(",
			"parse",
			"center",
			"Config.db",
			"cout",
			"relop ::=",
			"olivegreen",
			"([\"October 2013\"])",
			"\"[a-z]*\"\\t",
			";}",
			"if(!inBlockComment){ ",
			"#define ParseARG_PDECL",
			"void parse",
			"parse",
			"tmpTransition.",
			".",
			"_tmpTransitions",
			"_tmpStruct",
			"strncmp",
			"LOOPEXIT",
			"finger"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": true,
		"replace_history":
		[
			";",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 9,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/Interpreter/SConscript",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 385,
						"regions":
						{
						},
						"selection":
						[
							[
								155,
								155
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/Interpreter/common.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 153,
						"regions":
						{
						},
						"selection":
						[
							[
								11,
								11
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/Interpreter/interpreter.h",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 278,
						"regions":
						{
						},
						"selection":
						[
							[
								102,
								102
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/Interpreter/interpreter.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10322,
						"regions":
						{
						},
						"selection":
						[
							[
								44,
								44
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "runTest.sh",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 71,
						"regions":
						{
						},
						"selection":
						[
							[
								20,
								20
							]
						],
						"settings":
						{
							"syntax": "Packages/ShellScript/Shell-Unix-Generic.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "SConstruct",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 887,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 6,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1204,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										188,
										194
									],
									[
										404,
										410
									],
									[
										802,
										808
									],
									[
										860,
										866
									],
									[
										1080,
										1086
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								96,
								96
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"line_numbers": false,
							"output_tag": 1,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "src/Compiler/Lexer_Parser/token.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 579,
						"regions":
						{
						},
						"selection":
						[
							[
								434,
								434
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "src/Compiler/Lexer_Parser/LangLexer.l",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 6416,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Lisp/Lisp.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 589.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "tests/BasicPrint.lan",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 36,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "src/Compiler/Lexer_Parser/token.hpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 365,
						"regions":
						{
						},
						"selection":
						[
							[
								232,
								232
							],
							[
								253,
								253
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "src/Interpreter/disassembler.c",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2572,
						"regions":
						{
						},
						"selection":
						[
							[
								45,
								45
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 299.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "CS 498.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"int",
				"Interpreter/interpreter.c"
			],
			[
				"lan",
				"Compiler/Lexer_Parser/LangParse.y"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 193.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
