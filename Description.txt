I would like to do the following for my capstone. I would like to create a compiler for a language that I develop, that will generate an intermediate byte code that can be run by an interpreter that I will write as well.
Here are the language features that I would like to implement in the compiler and interpreter:
	- basic arithmetics (+,-,*,/,%,^)
	- conditionals (if)
	- variables (assignment/use)
	- data types (int, float, string)
If I have enough time, I will implement at least one or more (depending on time) of the following features:
	- loops (while)
	- external functions (functions that the interpreter will expose)
	- functions
	- pointers
	- dynamic memory allocation

When complete, the compiler should be able to process a source file, and the interpreter should be able to run the bytecode generated by the compiler.
